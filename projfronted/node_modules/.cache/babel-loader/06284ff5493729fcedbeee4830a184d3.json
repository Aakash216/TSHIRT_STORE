{"ast":null,"code":"import { API } from \"../../backend\"; //category calls\n\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: \"post\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get all categories\n\nexport const getCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //product calls\n//create a products\n\nexport const createProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //get all products\n\nexport const getProducts = () => {\n  return fetch(`${API}/products`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //delete a prod uct\n//get a product\n\nexport const getProduct = productId => {\n  return fetch(`${API}/product/${productId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //update a product\n\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/aakash/Desktop/Icomernbootcamp/projfronted/src/admin/helper/adminapicall.js"],"names":["API","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","getCategories","createProduct","product","getProducts","getProduct","productId","updateProduct"],"mappings":"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","sourcesContent":["import { API } from \"../../backend\";\n\n\n//category calls\nexport const createCategory = (userId, token, category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: \"post\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  })\n    .then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\n//get all categories\n\nexport const getCategories = () => {\nreturn fetch(`${API}/categories`, {\n  method: \"GET\"\n})\n.then(response => {\n  return response.json();\n})\n.catch(err => console.log(err));\n};\n\n//product calls\n\n//create a products\nexport const createProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json()\n  })\n  .catch(err => console.log(err))\n}\n\n//get all products\n\nexport const getProducts = () => {\n  return fetch(`${API}/products`, {\n    method: \"GET\"\n  })\n  .then(response => {\n    return response.json();\n  })\n  .catch(err => console.log(err));\n  };\n\n  //delete a prod uct\n\n  //get a product\n\n  export const getProduct = productId => {\n    return fetch (`${API}/product/${productId}`, {\n      method: \"GET\"\n    }).then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err)); \n  } \n\n  //update a product\n\n  export const updateProduct = (productId,userId, token, product) => {\n    return fetch(`${API}/product/${productId}/${userId}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      body: product\n    }).then(response => {\n      return response.json();\n    })\n    .catch(err => console.log(err));\n  };"]},"metadata":{},"sourceType":"module"}