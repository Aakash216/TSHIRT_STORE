{"ast":null,"code":"var _jsxFileName = \"/home/aakash/Desktop/Icomernbootcamp/projfronted/src/core/Paymentb.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { emptyCart } from \"./helper/cartHelper\";\nimport { getAToken, processPayment } from \"./helper/paymenthelper\";\nimport { createOrder } from \"./helper/OrderHelper\";\nimport { isAuthenticated } from \"./../auth/helper/index\";\nimport DropIn from \"braintree-web-drop-in-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Payment = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  _s();\n\n  const [info, setInfo] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\",\n    instance: {}\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getAToken(userId, token).then(res => {\n      if (res.error) {\n        setInfo({ ...info,\n          error: res.error\n        });\n      } else {\n        const clientToken = res.clientToken;\n        setInfo({\n          clientToken\n        });\n      }\n    });\n  };\n\n  const onPurchase = () => {\n    setInfo({\n      loading: true\n    });\n    let nonce;\n    let getNonce = info.instance.requestPaymentMethod().then(data => {\n      nonce = data.nonce;\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getAmount()\n      };\n      processPayment(userId, token, paymentData).then(res => {\n        setInfo({ ...info,\n          success: res.success,\n          loading: false\n        });\n        console.log(\"HI\");\n        console.log(res);\n        const orderData = {\n          products: products,\n          transaction_id: res.transaction.id,\n          amount: res.transaction.amount\n        };\n        createOrder(userId, token, orderData);\n        emptyCart();\n        setReload(!reload);\n      }).catch(err => {\n        setInfo({\n          loading: false,\n          success: false\n        });\n      });\n    });\n  };\n\n  const showBtDropIn = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: info.clientToken !== null && products ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DropIn, {\n          options: {\n            authorization: info.clientToken\n          },\n          onInstance: instance => info.instance = instance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-block btn-success\",\n          onClick: onPurchase,\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please Login or Add something to cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const getAmount = () => {\n    let amount = 0;\n\n    if (products) {\n      products.map(p => {\n        amount = amount + p.price;\n      });\n    }\n\n    return amount;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your Bill is \", getAmount(), \" $\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), showBtDropIn()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Payment, \"Qk3cERqXoYMyYXb7bluammxTwqk=\");\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/home/aakash/Desktop/Icomernbootcamp/projfronted/src/core/Paymentb.js"],"names":["React","useState","useEffect","emptyCart","getAToken","processPayment","createOrder","isAuthenticated","DropIn","Payment","products","setReload","f","reload","undefined","info","setInfo","loading","success","clientToken","error","instance","userId","user","_id","token","getToken","then","res","onPurchase","nonce","getNonce","requestPaymentMethod","data","paymentData","paymentMethodNonce","amount","getAmount","console","log","orderData","transaction_id","transaction","id","catch","err","showBtDropIn","authorization","map","p","price"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { emptyCart } from \"./helper/cartHelper\";\nimport { getAToken, processPayment } from \"./helper/paymenthelper\";\nimport { createOrder } from \"./helper/OrderHelper\";\nimport { isAuthenticated } from \"./../auth/helper/index\";\nimport DropIn from \"braintree-web-drop-in-react\";\n\nconst Payment = ({ products, setReload = (f) => f, reload = undefined }) => {\n    const [info, setInfo] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: \"\",\n        instance: {},\n    });\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const getToken = (userId, token) => {\n        getAToken(userId, token).then((res) => {\n            if (res.error) {\n                setInfo({ ...info, error: res.error });\n            } else {\n                const clientToken = res.clientToken;\n                setInfo({ clientToken });\n            }\n        });\n    };\n\n    const onPurchase = () => {\n        setInfo({ loading: true });\n        let nonce;\n        let getNonce = info.instance.requestPaymentMethod().then((data) => {\n            nonce = data.nonce;\n            const paymentData = {\n                paymentMethodNonce: nonce,\n                amount: getAmount(),\n            };\n            processPayment(userId, token, paymentData)\n                .then((res) => {\n                    setInfo({\n                        ...info,\n                        success: res.success,\n                        loading: false,\n                    });\n                    console.log(\"HI\");\n                    console.log(res);\n                    const orderData = {\n                        products: products,\n                        transaction_id: res.transaction.id,\n                        amount: res.transaction.amount,\n                    };\n                    createOrder(userId, token, orderData);\n                    emptyCart();\n                    setReload(!reload);\n                })\n                .catch((err) => {\n                    setInfo({ loading: false, success: false });\n                });\n        });\n    };\n\n    const showBtDropIn = () => {\n        return (\n            <div>\n                {info.clientToken !== null && products ? (\n                    <div>\n                        <DropIn\n                            options={{ authorization: info.clientToken }}\n                            onInstance={(instance) =>\n                                (info.instance = instance)\n                            }\n                        />\n                        <button\n                            className=\"btn btn-block btn-success\"\n                            onClick={onPurchase}\n                        >\n                            Buy\n                        </button>\n                    </div>\n                ) : (\n                    <h3>Please Login or Add something to cart</h3>\n                )}\n            </div>\n        );\n    };\n\n    useEffect(() => {\n        getToken(userId, token);\n    }, []);\n\n    const getAmount = () => {\n        let amount = 0;\n        if (products) {\n            products.map((p) => {\n                amount = amount + p.price;\n            });\n        }\n        return amount;\n    };\n\n    return (\n        <div>\n            <h3>Your Bill is {getAmount()} $</h3>\n            {showBtDropIn()}\n        </div>\n    );\n};\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}