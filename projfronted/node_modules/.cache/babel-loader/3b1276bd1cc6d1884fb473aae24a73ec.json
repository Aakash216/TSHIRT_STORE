{"ast":null,"code":"var _jsxFileName = \"/home/aakash/Desktop/Icomernbootcamp/projfronted/src/core/Paymentb.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport DropIn from \"braintree-web-drop-in-react\";\nimport { loadCart, cardEmpty } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport { getmeToken, processPayment } from \"./helper/paymentbhelper\";\nimport { createOrder } from \"./helper/OrderHelper\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Paymentb({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) {\n  _s();\n\n  const [info, setInfo] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\",\n    instance: {}\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getmeToken(userId, token).then(info => {\n      //console.log(\"INFORMATION\", info);\n      if (info.error) {\n        setInfo({ ...info,\n          error: info.error\n        });\n      } else {\n        const clientToken = info.clientToken;\n        setInfo({\n          clientToken\n        });\n      }\n    });\n  };\n\n  const showbtdropIn = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: info.clientToken !== null && products.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DropIn, {\n          options: {\n            authorization: info.clientToken\n          },\n          onInstance: instance => info.instance = instance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-block btn-success\",\n          onClick: onPurchase,\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Please login or add something to cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const onPurchase = () => {\n    setInfo({\n      loading: true\n    });\n    let nonce;\n    let getNonce = info.instance.requestPaymentMethod().then(data => {\n      nonce = data.nonce;\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getAmount()\n      };\n      processPayment(userId, token, paymentData).then(response => {\n        setInfo({ ...info,\n          success: response.success,\n          loading: false\n        });\n        console.log(\"PAYMENT SUCCESS\"); //TODO: empty the cart\n        //TODO: force reload\n      }).catch(error => {\n        setInfo({\n          loading: false,\n          success: false\n        });\n        console.log(\"PAYMENT FAILED\");\n      });\n    });\n  };\n\n  const getAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your bill is \", getAmount(), \" $\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), showbtdropIn()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Paymentb, \"Ejer7eHl5RkfNFdIYelRBphCFso=\");\n\n_c = Paymentb;\nexport default Paymentb;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paymentb\");","map":{"version":3,"sources":["/home/aakash/Desktop/Icomernbootcamp/projfronted/src/core/Paymentb.js"],"names":["React","useState","useEffect","DropIn","loadCart","cardEmpty","Link","getmeToken","processPayment","createOrder","isAuthenticated","Paymentb","products","setReload","f","reload","undefined","info","setInfo","loading","success","clientToken","error","instance","userId","user","_id","token","getToken","then","showbtdropIn","length","authorization","onPurchase","nonce","getNonce","requestPaymentMethod","data","paymentData","paymentMethodNonce","amount","getAmount","response","console","log","catch","map","p","price"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport DropIn from \"braintree-web-drop-in-react\";\nimport { loadCart, cardEmpty } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport {  getmeToken, processPayment } from \"./helper/paymentbhelper\";\nimport { createOrder } from \"./helper/OrderHelper\"; \nimport { isAuthenticated } from \"../auth/helper\";\n\nfunction Paymentb({ products, setReload = f => f, reload = undefined }) {\n  \n    const [info, setInfo] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: \"\",\n        instance: {}\n    });\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n\n    const getToken = (userId, token) => {\n        getmeToken(userId, token).then(info => {\n           //console.log(\"INFORMATION\", info);\n          if (info.error) {\n            setInfo({ ...info, error: info.error });\n          } else {\n            const clientToken = info.clientToken;\n            setInfo({ clientToken });\n          }\n        });\n      };\n\n      const showbtdropIn = () => {\n          return (\n            <div>\n            {info.clientToken !== null && products.length > 0 ? (\n              <div>\n                <DropIn\n                  options={{ authorization: info.clientToken }}\n                  onInstance={instance => (info.instance = instance)}\n                />\n                <button className=\"btn btn-block btn-success\" onClick={onPurchase}>\n                  Buy\n                </button>\n              </div>\n            ) : (\n              <h3>Please login or add something to cart</h3>\n            )}\n          </div>\n          )\n      }\n\n\n      useEffect(() => {\n        getToken(userId, token);\n      }, []);\n  \n  const onPurchase = () => {\n      setInfo({ loading: true });\n      let nonce;\n      let getNonce = info.instance.requestPaymentMethod().then(data => {\n        nonce = data.nonce;\n        const paymentData = {\n          paymentMethodNonce: nonce,\n          amount: getAmount()\n        };\n        processPayment(userId, token, paymentData)\n          .then(response => {\n            setInfo({ ...info, success: response.success, loading: false });\n            console.log(\"PAYMENT SUCCESS\");\n            //TODO: empty the cart\n            //TODO: force reload\n          })\n          .catch(error => {\n            setInfo({ loading: false, success: false });\n            console.log(\"PAYMENT FAILED\");\n          });\n      });\n    };\n  \n\n  const getAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n\n    return (\n        <div>\n        <h3>Your bill is {getAmount()} $</h3>\n        {showbtdropIn()}\n      </div>\n    )\n}\n\nexport default Paymentb"]},"metadata":{},"sourceType":"module"}