{"ast":null,"code":"var _jsxFileName = \"/home/aakash/Desktop/Icomernbootcamp/projfronted/src/core/StripeCheckout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport { cartEmpty, loadCart } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport StripeCheckoutButton from \"react-stripe-checkout\";\nimport { API } from \"../backend\";\nimport { createOrder } from \"./helper/OrderHelper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StripeCheckout = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  _s();\n\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    error: \"\",\n    address: \"\"\n  });\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const getFinalAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n  const makePayment = token => {\n    const body = {\n      token,\n      products\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    return fetch(`${API}/stripepayment`, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(body)\n    }).then(res => {\n      var _res$transaction, _response, _response$transaction;\n\n      //console.log(res);\n      //call further methods\n      const orderData = {\n        products: products,\n        transaction_id: res === null || res === void 0 ? void 0 : (_res$transaction = res.transaction) === null || _res$transaction === void 0 ? void 0 : _res$transaction.id,\n        amount: (_response = response) === null || _response === void 0 ? void 0 : (_response$transaction = _response.transaction) === null || _response$transaction === void 0 ? void 0 : _response$transaction.amount\n      };\n      const {\n        status\n      } = res;\n      console.log(\"STATUS\", status);\n      createOrder(userId, token, orderData);\n      cartEmpty(() => {\n        console.log(\"Did we got a crash?\");\n      });\n    }).catch(error => console.log(error));\n  };\n\n  const showStripeButton = () => {\n    return isAuthenticated() ? /*#__PURE__*/_jsxDEV(StripeCheckoutButton, {\n      stripeKey: \"pk_test_51JaeNRSGEXLphxHDJYvJmKMiXTl6m2Y3eUEiqxbsEGNQKKksz5TsOrmnGoTR37OETLRgw73izdu2Hwb5pOjRhz9400X28fqKgy\",\n      token: makePayment,\n      amount: getFinalAmount() * 100,\n      name: \"Buy Tshirts\",\n      shippingAddress: true,\n      billingAddress: true,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        children: \"Pay with stripe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signin\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        children: \"Signin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-white\",\n      children: [\"Stripe Checkout \", getFinalAmount()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), showStripeButton()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StripeCheckout, \"0h2XWCfFcauINIuXGewy5vaEKUo=\");\n\n_c = StripeCheckout;\nexport default StripeCheckout;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckout\");","map":{"version":3,"sources":["/home/aakash/Desktop/Icomernbootcamp/projfronted/src/core/StripeCheckout.js"],"names":["React","useState","useEffect","isAuthenticated","cartEmpty","loadCart","Link","StripeCheckoutButton","API","createOrder","StripeCheckout","products","setReload","f","reload","undefined","data","setData","loading","success","error","address","token","userId","user","_id","getFinalAmount","amount","map","p","price","makePayment","body","headers","fetch","method","JSON","stringify","then","res","orderData","transaction_id","transaction","id","response","status","console","log","catch","showStripeButton"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport { cartEmpty, loadCart } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport StripeCheckoutButton from \"react-stripe-checkout\";\nimport { API } from \"../backend\";\nimport { createOrder } from \"./helper/OrderHelper\";\n\nconst StripeCheckout = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    error: \"\",\n    address: \"\"\n  });\n\n  const token = isAuthenticated() && isAuthenticated().token;\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const getFinalAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n  const makePayment = token => {\n    const body = {\n      token,\n      products\n    };\n    const headers = {\n      \"Content-Type\": \"application/json\"\n    };\n    return fetch(`${API}/stripepayment`, {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(body)\n    }).then((res) => {\n        //console.log(res);\n        //call further methods\n        const orderData = {\n          products: products,\n          transaction_id: res?.transaction?.id,\n          amount: response?.transaction?.amount,\n      }\n      \n        const {status} = res;\n        console.log(\"STATUS\", status)\n        createOrder(userId, token, orderData);\n        cartEmpty(() => {\n            console.log(\"Did we got a crash?\")\n        });\n      })\n      .catch((error) => console.log(error));\n  };\n\n  const showStripeButton = () => {\n    return isAuthenticated() ? (\n      <StripeCheckoutButton\n        stripeKey=\"pk_test_51JaeNRSGEXLphxHDJYvJmKMiXTl6m2Y3eUEiqxbsEGNQKKksz5TsOrmnGoTR37OETLRgw73izdu2Hwb5pOjRhz9400X28fqKgy\"\n        token={makePayment}\n        amount={getFinalAmount() * 100}\n        name=\"Buy Tshirts\"\n        shippingAddress\n        billingAddress\n      >\n        <button className=\"btn btn-success\">Pay with stripe</button>\n      </StripeCheckoutButton>\n    ) : (\n      <Link to=\"/signin\">\n        <button className=\"btn btn-warning\">Signin</button>\n      </Link>\n    );\n  };\n\n  return (\n    <div>\n      <h3 className=\"text-white\">Stripe Checkout {getFinalAmount()}</h3>\n      {showStripeButton()}\n    </div>\n  );\n};\n\nexport default StripeCheckout;"]},"metadata":{},"sourceType":"module"}