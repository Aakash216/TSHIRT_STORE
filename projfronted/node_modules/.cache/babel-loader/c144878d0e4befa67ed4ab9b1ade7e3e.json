{"ast":null,"code":"var _jsxFileName = \"/home/aakash/Desktop/Icomernbootcamp/projfronted/src/core/Paymentb.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { cartEmpty, loadCart } from './helper/cartHelper';\nimport { getmeToken, processPayment } from './helper/paymentbhelper';\nimport { createOrder } from './helper/OrderHelper';\nimport { isAuthenticated } from '../auth/helper';\nimport DropIn from \"braintree-web-drop-in-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Paymentb = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  _s();\n\n  const [info, setInfo] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\",\n    instance: {}\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getmeToken(userId, token).then(info => {\n      // console.log(\"INFORMATION\", info);\n      if (info && info.error) {\n        setInfo({ ...info,\n          error: info.error\n        });\n      } else {\n        const clientToken = info.clientToken;\n        setInfo({\n          clientToken\n        });\n      }\n    });\n  };\n\n  const showbtdropIn = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: info.clientToken !== null && products.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DropIn, {\n          options: {\n            authorization: info.clientToken\n          },\n          onInstance: instance => info.instance = instance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-block btn-success rounded\",\n          onClick: onPurchase,\n          children: \"Buy Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Please \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signin\",\n          className: \"text-white border-bottom\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 32\n        }, this), \" or \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          className: \"text-white border-bottom\",\n          children: \"add something\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 104\n        }, this), \" to cart.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const onPurchase = () => {\n    setInfo({ ...info,\n      loading: true\n    });\n    let nonce;\n    let getNonce = info.dropinInstance.requestPaymentMethod().then(data => {\n      nonce = data.nonce;\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getAmount()\n      };\n      processPayment(userId, token, paymentData).then(response => {\n        setInfo({ ...info,\n          success: response.success,\n          loading: false\n        });\n        console.log(\"PAYMENT SUCCESSFUL\");\n        const orderData = {\n          products: products,\n          transaction_id: response.transaction.id,\n          amount: response.transaction.amount\n        };\n        createOrder(userId, token, orderData);\n        cartEmpty(() => {\n          console.log(\"Did we got a crash?\");\n        });\n        setReload(!reload);\n      }).catch(error => {\n        setInfo({\n          loading: false,\n          success: false\n        });\n        console.log(\"PAYMENT FAILED\");\n      });\n    });\n  };\n\n  const getAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Total Amount - $\", getAmount()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), showbtdropIn()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Paymentb, \"Ejer7eHl5RkfNFdIYelRBphCFso=\");\n\n_c = Paymentb;\nexport default Paymentb;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paymentb\");","map":{"version":3,"sources":["/home/aakash/Desktop/Icomernbootcamp/projfronted/src/core/Paymentb.js"],"names":["React","useState","useEffect","Link","cartEmpty","loadCart","getmeToken","processPayment","createOrder","isAuthenticated","DropIn","Paymentb","products","setReload","f","reload","undefined","info","setInfo","loading","success","clientToken","error","instance","userId","user","_id","token","getToken","then","showbtdropIn","length","authorization","onPurchase","nonce","getNonce","dropinInstance","requestPaymentMethod","data","paymentData","paymentMethodNonce","amount","getAmount","response","console","log","orderData","transaction_id","transaction","id","catch","map","p","price"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { cartEmpty, loadCart } from './helper/cartHelper';\nimport { getmeToken, processPayment } from './helper/paymentbhelper';\nimport { createOrder } from './helper/OrderHelper';\nimport { isAuthenticated } from '../auth/helper';\nimport DropIn from \"braintree-web-drop-in-react\";\n\nconst Paymentb = ({ products, setReload = f => f, reload = undefined }) => {\n\n    const [info, setInfo] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: \"\",\n        instance: {}\n    });\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const getToken = (userId, token) => {\n        getmeToken(userId, token).then(info => {\n            // console.log(\"INFORMATION\", info);\n            if (info && info.error) {\n                setInfo({ ...info, error: info.error });\n            } else {\n                const clientToken = info.clientToken;\n                setInfo({ clientToken });\n            }\n        });\n    };\n    const showbtdropIn = () => {\n        return (\n            <div>\n                {info.clientToken !== null && products.length > 0 ? (\n                    <div>\n                        <DropIn\n                            options={{ authorization: info.clientToken }}\n                            onInstance={instance => (info.instance = instance)}\n                        />\n                        <button className=\"btn btn-block btn-success rounded\" onClick={onPurchase}>\n                            Buy Now\n                        </button>\n                    </div>\n                ) : (\n                    <h4>Please <Link to=\"/signin\" className=\"text-white border-bottom\">Login</Link> or <Link to=\"/\" className=\"text-white border-bottom\">add something</Link> to cart.</h4>\n                )}\n            </div>\n        );\n    }\n\n    useEffect(() => {\n        getToken(userId, token);\n    }, []);\n\n    const onPurchase = () => {\n        setInfo({...info, loading: true });\n        let nonce;\n        let getNonce = info.dropinInstance.requestPaymentMethod().then(data => {\n            nonce = data.nonce;\n            const paymentData = {\n                paymentMethodNonce: nonce,\n                amount: getAmount()\n            };\n            processPayment(userId, token, paymentData).then(response => {\n                setInfo({ ...info, success: response.success, loading: false });\n                console.log(\"PAYMENT SUCCESSFUL\")\n                const orderData = {\n                    products: products,\n                    transaction_id: response.transaction.id,\n                    amount: response.transaction.amount,\n                }\n                createOrder(userId, token, orderData);\n                cartEmpty(() => {\n                    console.log(\"Did we got a crash?\")\n                });\n                setReload(!reload);\n            }).catch(error => {\n                setInfo({ loading: false, success: false })\n                console.log(\"PAYMENT FAILED\")\n            });\n        });\n    }\n\n    const getAmount = () => {\n        let amount = 0;\n        products.map(p => {\n            amount = amount + p.price;\n        });\n        return amount;\n    }\n\n    return (\n        <div>\n            <h3>Total Amount - ${getAmount()}</h3>\n            <br />\n            {showbtdropIn()}\n        </div>\n    );\n}\n\nexport default Paymentb;"]},"metadata":{},"sourceType":"module"}