{"ast":null,"code":"var _jsxFileName = \"/home/aakash/Desktop/Icomernbootcamp/projfronted/src/core/Paymentb.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { loadCart, cardEmpty } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport { getmeToken, processPayment } from \"./helper/paymentbhelper\";\nimport { createOrder } from \"./helper/OrderHelper\";\nimport { isAuthenticated } from \"../auth/helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Paymentb({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) {\n  _s();\n\n  const [info, setInfo] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\"\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getmeToken(userId, token).then(info => {\n      console.log(\"INFORMATION\", info);\n\n      if (info.error) {\n        setInfo({ ...info,\n          error: info.error\n        });\n      } else {\n        const clientToken = info.clientToken;\n        setInfo({\n          clientToken\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Test bt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Paymentb, \"Vpwy5/CyO0x9+qYiP71qPvvCDQs=\");\n\n_c = Paymentb;\nexport default Paymentb;\n\nvar _c;\n\n$RefreshReg$(_c, \"Paymentb\");","map":{"version":3,"sources":["/home/aakash/Desktop/Icomernbootcamp/projfronted/src/core/Paymentb.js"],"names":["React","useState","useEffect","loadCart","cardEmpty","Link","getmeToken","processPayment","createOrder","isAuthenticated","Paymentb","products","setReload","f","reload","undefined","info","setInfo","loading","success","clientToken","error","userId","user","_id","token","getToken","then","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,qBAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAUC,UAAV,EAAsBC,cAAtB,QAA4C,yBAA5C;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,eAAT,QAAgC,gBAAhC;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAS,GAAGC,CAAC,IAAIA,CAA7B;AAAgCC,EAAAA,MAAM,GAAGC;AAAzC,CAAlB,EAAwE;AAAA;;AAEpE,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC;AAC7BiB,IAAAA,OAAO,EAAE,KADoB;AAE7BC,IAAAA,OAAO,EAAE,KAFoB;AAG7BC,IAAAA,WAAW,EAAE,IAHgB;AAI7BC,IAAAA,KAAK,EAAE;AAJsB,GAAD,CAAhC;;AAOA,QAAMC,MAAM,GAAGb,eAAe,MAAMA,eAAe,GAAGc,IAAlB,CAAuBC,GAA3D;;AACA,QAAMC,KAAK,GAAGhB,eAAe,MAAMA,eAAe,GAAGgB,KAArD;;AAGA,QAAMC,QAAQ,GAAG,CAACJ,MAAD,EAASG,KAAT,KAAmB;AAChCnB,IAAAA,UAAU,CAACgB,MAAD,EAASG,KAAT,CAAV,CAA0BE,IAA1B,CAA+BX,IAAI,IAAI;AACnCY,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0Bb,IAA1B;;AACA,UAAIA,IAAI,CAACK,KAAT,EAAgB;AACZJ,QAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWK,UAAAA,KAAK,EAAEL,IAAI,CAACK;AAAvB,SAAD,CAAP;AACH,OAFD,MAEO;AACH,cAAMD,WAAW,GAAGJ,IAAI,CAACI,WAAzB;AACAH,QAAAA,OAAO,CAAE;AAAEG,UAAAA;AAAF,SAAF,CAAP;AACH;AACJ,KARD;AASH,GAVD;;AAgBA,sBACI;AAAA,2BACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADQ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAlCQV,Q;;KAAAA,Q;AAoCT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { loadCart, cardEmpty } from \"./helper/cartHelper\";\nimport { Link } from \"react-router-dom\";\nimport {  getmeToken, processPayment } from \"./helper/paymentbhelper\";\nimport { createOrder } from \"./helper/OrderHelper\"; \nimport { isAuthenticated } from \"../auth/helper\";\n\nfunction Paymentb({ products, setReload = f => f, reload = undefined }) {\n  \n    const [info, setInfo] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: \"\"\n    });\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n\n    const getToken = (userId, token) => {\n        getmeToken(userId, token).then(info => {\n            console.log(\"INFORMATION\",info)\n            if (info.error) {\n                setInfo({ ...info, error: info.error});\n            } else {\n                const clientToken = info.clientToken;\n                setInfo ({ clientToken });\n            }\n        });\n    };\n\n\n    \n  \n  \n    return (\n        <div>\n<h3>Test bt</h3>\n        </div>\n    )\n}\n\nexport default Paymentb"]},"metadata":{},"sourceType":"module"}